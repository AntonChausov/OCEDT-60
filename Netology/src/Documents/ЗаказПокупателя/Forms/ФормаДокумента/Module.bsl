
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды    
	
	// ++ Алатарцева В.А. 10.01.2025 Добавление группы и реквизита формы         	
	//Добавление команды на форму
	Если Элементы.Найти("КомандаПересчитать") = Неопределено Тогда 
		
		КомандаПересчитать = Команды.Добавить("Пересчитать");
		КомандаПересчитать.Заголовок = "Пересчитать";
		КомандаПересчитать.Действие = "КомандаПересчитать";
		
		КнопкаФормы = Элементы.Добавить("КнопкаПересчитать", Тип("КнопкаФормы"), ЭтаФорма.Элементы.ГруппаСкидкаПересчитать);
		КнопкаФормы.ИмяКоманды = "Пересчитать";
		КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
		
	КонецЕсли;
	// -- Алатарцева В.А. 10.01.2025 
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении(Элемент)                             
	
	// ++ Алатарцева В.А. 10.01.2025
	Если  ЗначениеЗаполнено(Объект.Товары) ИЛИ ЗначениеЗаполнено(Объект.Услуги) Тогда
		
		Текст = НСтр("ru='Изменилась скидка. Пересчитать?'");
		
		Обещание = ВопросАсинх(Текст, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Результат = Ждать Обещание;   
		
		Если Результат = КодВозвратаДиалога.Да Тогда 
			
			КомандаПересчитать(); 
			
		КонецЕсли; 
		
	КонецЕсли; 
	// -- Алатарцева В.А. 10.01.2025
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПересчитать()
	
	// ++ Алатарцева В.А. 10.01.2025 
	Для Каждого Строка Из Объект.Товары Цикл    
		
		РассчитатьСуммуСтроки(Строка);
		
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(Строка);
		
	КонецЦикла;
	// -- Алатарцева В.А. 10.01.2025    
	
	// ++ Алатарцева В.А. 10.03.2025 
	РассчитатьСуммуДокумента();
	// -- Алатарцева В.А. 10.03.2025   
	
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	
	// ++ Алатарцева В.А. 10.01.2025
	КомандаПересчитать();
	// -- Алатарцева В.А. 10.01.2025
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Алатарцева В.А. 10.01.2025 
	//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; 
	
	//Обновила формулу расчета суммы, с учетом реквизита Скидка	
	//ТекущиеДанные.Сумма = (ТекущиеДанные.Цена * ТекущиеДанные.Количество) - (ТекущиеДанные.Цена * ТекущиеДанные.Количество * Объект.ДО_СогласованнаяСкидка/100);
	//Сообщить("Сумма по документу пересчитана");
	
	//РассчитатьСуммуДокумента();
	// -- Алатарцева В.А. 10.01.2025     
	
	// ++ Алатарцева В.А. 10.03.2025 
	//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки; 
	
	ОбщаяСкидка = Объект.ДО_СогласованнаяСкидка + ТекущиеДанные.Скидка;    
	
	Если ОбщаяСкидка <= 100 Тогда  
		ТекущиеДанные.Сумма = (ТекущиеДанные.Цена * ТекущиеДанные.Количество) - (ТекущиеДанные.Цена * ТекущиеДанные.Количество * ОбщаяСкидка/100);
	Иначе
		Текст = СтрШаблон("Сумма скидки номенклатуры %1 не может превышать 100", ТекущиеДанные.Номенклатура); 
		Сообщить(Текст); 
		ТекущиеДанные.Сумма = 0;
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	// -- Алатарцева В.А. 10.03.2025     
	
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
